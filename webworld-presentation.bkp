import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight, Play, Pause } from 'lucide-react';

const WebWorldPresentation = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const [showControls, setShowControls] = useState(true);

  const slides = [
    {
      title: "Introduction",
      visual: "landing-page",
      message: "WebWorld is a revolutionary platform that brings AI minds to life through sophisticated cognitive frameworks. Watch as characters with complex internal states interact, form relationships, and navigate challenges authentically."
    },
    {
      title: "Character-Driven Simulation",
      visual: "character-panel",
      message: "Each character in WebWorld possesses a unique cognitive architecture complete with drives, goals, memories, and emotional states. These aren't static scripts - they're dynamic minds making decisions in real-time based on their internal states and external stimuli."
    },
    {
      title: "Cognitive Architecture",
      visual: "core-state",
      message: "Behind every character is a sophisticated cognitive model. Characters maintain drives that motivate their behavior, form goals and tasks to satisfy those drives, and make decisions based on their perception of the world around them."
    },
    {
      title: "Memory System",
      visual: "memory-tab",
      message: "Characters don't just react - they remember. WebWorld's memory system creates both concrete memories of specific events and abstract memories that represent patterns of experience, allowing characters to learn and evolve through their interactions."
    },
    {
      title: "Social Dynamics",
      visual: "social-tab",
      message: "Characters build relationships that evolve naturally over time. They remember past interactions, form impressions, and adjust their behavior accordingly. Watch as they develop trust, navigate conflicts, and form authentic bonds."
    },
    {
      title: "Drive Signals & Character Motivation",
      visual: "signals-tab",
      message: "Character behavior is motivated by drive signals - opportunities and issues that arise from their fundamental needs and desires. These shape goals and tasks in a dynamic way that creates emergent narrative without scripting."
    },
    {
      title: "Complete Transparency",
      visual: "debug-tab",
      message: "Unlike black-box systems, WebWorld provides complete transparency into character thought processes. Understand exactly why a character made a specific decision by exploring their mental state at any moment."
    },
    {
      title: "Interactive World Environment",
      visual: "world-panel",
      message: "Characters exist in richly described environments that influence their perceptions and actions. Watch as they react to their surroundings, take actions that change the world state, and respond to those changes."
    },
    {
      title: "Control Panel & User Interaction",
      visual: "control-panel",
      message: "WebWorld gives you full control over the simulation. Run continuously to watch stories emerge, step through to analyze specific moments, or inject your own influence to guide the narrative in new directions."
    },
    {
      title: "Applications for Creative Fields",
      visual: "creative-applications",
      message: "For writers, filmmakers, and game developers, WebWorld offers unprecedented tools for character development, story prototyping, and narrative exploration. Test character dynamics, experiment with scenarios, and discover authentic story arcs."
    },
    {
      title: "Applications for Research & Counseling",
      visual: "research-applications",
      message: "Researchers in psychology, sociology, and cognitive science can use WebWorld to model human behavior and social dynamics. Counselors can create simulations to help clients understand complex interpersonal situations or practice difficult conversations."
    },
    {
      title: "Call to Action",
      visual: "logo",
      message: "Join us in exploring the future of AI storytelling and cognitive simulation. Contact us today to discuss partnership opportunities and discover how WebWorld can enhance your creative, research, or therapeutic work."
    }
  ];

  // Visual placeholders mapping
  const visualPlaceholders = {
    "landing-page": "Webworld_main_screen.png",
    "character-panel": "CharacterPanelDetail.png",
    "core-state": "CharacterExplorerCoreTab.png",
    "memory-tab": "CharacterExplorerMemoryTab.png",
    "social-tab": "CharacterExplorerSocialTab.png",
    "signals-tab": "CharacterExplorerSignalsTab.png",
    "debug-tab": "CharacterExplorerDebugTab.png",
    "world-panel": "CharacterExplorerWorldTab.png",
    "control-panel": "CharacterExplorerControlPanel.png",
    "creative-applications": "CharacterExplorerCreativeApplications.png",
    "research-applications": "CharacterExplorerResearchApplications.png",
    "logo": "/api/placeholder/800/450"
  };

  useEffect(() => {
    let interval;
    if (isPlaying) {
      interval = setInterval(() => {
        setCurrentSlide((prevSlide) => 
          prevSlide === slides.length - 1 ? 0 : prevSlide + 1
        );
      }, 8000); // 8 seconds per slide
    }
    return () => clearInterval(interval);
  }, [isPlaying, slides.length]);

  const goToNextSlide = () => {
    setCurrentSlide((prevSlide) => 
      prevSlide === slides.length - 1 ? 0 : prevSlide + 1
    );
  };

  const goToPrevSlide = () => {
    setCurrentSlide((prevSlide) => 
      prevSlide === 0 ? slides.length - 1 : prevSlide - 1
    );
  };

  const togglePlayPause = () => {
    setIsPlaying(!isPlaying);
  };

  // Progress percentage calculation
  const progressPercentage = ((currentSlide + 1) / slides.length) * 100;

  return (
    <div className="flex flex-col h-screen bg-gray-900 text-white overflow-hidden"
         onMouseEnter={() => setShowControls(true)}
         onMouseLeave={() => setShowControls(false)}>
      {/* Header with logo */}
      <header className="flex items-center p-4 bg-gray-800">
        <h1 className="text-2xl font-bold text-blue-400">WebWorld</h1>
        <span className="ml-2 text-gray-400">AI Characters in Living Stories</span>
      </header>

      {/* Main content area */}
      <div className="flex-grow relative overflow-hidden">
        {/* Slide content */}
        <div className="absolute inset-0 flex flex-col md:flex-row p-6 transition-opacity duration-500">
          {/* Visual section */}
          <div className="w-full md:w-3/5 flex-shrink-0 flex justify-center items-center p-4">
            <div className="relative w-full h-full max-h-96 rounded-lg overflow-hidden">
              <img 
                src={visualPlaceholders[slides[currentSlide].visual]} 
                alt={slides[currentSlide].title} 
                className="w-full h-full object-cover"
              />
              <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-gray-900 to-transparent h-16"></div>
            </div>
          </div>

          {/* Text section */}
          <div className="w-full md:w-2/5 flex flex-col justify-center p-6">
            <h2 className="text-3xl font-bold mb-6 text-blue-400">{slides[currentSlide].title}</h2>
            <p className="text-lg text-gray-200 leading-relaxed">{slides[currentSlide].message}</p>
          </div>
        </div>

        {/* Navigation controls */}
        <div className={`absolute bottom-8 left-0 right-0 flex justify-center transition-opacity duration-300 ${showControls ? 'opacity-100' : 'opacity-0'}`}>
          <div className="flex items-center bg-gray-800 bg-opacity-70 rounded-full px-4 py-2">
            <button onClick={goToPrevSlide} className="p-2 mr-2 rounded-full hover:bg-gray-700">
              <ChevronLeft className="w-6 h-6" />
            </button>
            
            <button onClick={togglePlayPause} className="p-2 mx-2 rounded-full hover:bg-gray-700">
              {isPlaying ? <Pause className="w-6 h-6" /> : <Play className="w-6 h-6" />}
            </button>
            
            <button onClick={goToNextSlide} className="p-2 ml-2 rounded-full hover:bg-gray-700">
              <ChevronRight className="w-6 h-6" />
            </button>
          </div>
        </div>

        {/* Progress bar */}
        <div className="absolute bottom-0 left-0 right-0 h-1 bg-gray-700">
          <div 
            className="h-full bg-blue-500 transition-all duration-300 ease-in-out"
            style={{ width: `${progressPercentage}%` }}
          ></div>
        </div>
      </div>

      {/* Footer with slide counter */}
      <footer className="p-4 bg-gray-800 flex justify-between items-center">
        <div className="text-sm text-gray-400">
          Slide {currentSlide + 1} of {slides.length}
        </div>
        <div className="text-sm text-gray-400">
          WebWorld Â© 2025
        </div>
      </footer>
    </div>
  );
};

export default WebWorldPresentation;
